/* tslint:disable */
/* eslint-disable */
/**
 * MsaasBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Department,
    DepartmentFromJSON,
    DepartmentFromJSONTyped,
    DepartmentToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface Physician
 */
export interface Physician {
    /**
     * 
     * @type {number}
     * @memberof Physician
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof Physician
     */
    userId?: number;
    /**
     * 
     * @type {User}
     * @memberof Physician
     */
    user?: User;
    /**
     * 
     * @type {number}
     * @memberof Physician
     */
    departmentId?: number;
    /**
     * 
     * @type {Department}
     * @memberof Physician
     */
    department?: Department;
}

export function PhysicianFromJSON(json: any): Physician {
    return PhysicianFromJSONTyped(json, false);
}

export function PhysicianFromJSONTyped(json: any, ignoreDiscriminator: boolean): Physician {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'departmentId': !exists(json, 'departmentId') ? undefined : json['departmentId'],
        'department': !exists(json, 'department') ? undefined : DepartmentFromJSON(json['department']),
    };
}

export function PhysicianToJSON(value?: Physician | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'user': UserToJSON(value.user),
        'departmentId': value.departmentId,
        'department': DepartmentToJSON(value.department),
    };
}



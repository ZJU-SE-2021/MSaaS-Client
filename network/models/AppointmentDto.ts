/* tslint:disable */
/* eslint-disable */
/**
 * MsaasBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MedicalRecordDto,
    MedicalRecordDtoFromJSON,
    MedicalRecordDtoFromJSONTyped,
    MedicalRecordDtoToJSON,
    PhysicianDto,
    PhysicianDtoFromJSON,
    PhysicianDtoFromJSONTyped,
    PhysicianDtoToJSON,
    UserDto,
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface AppointmentDto
 */
export interface AppointmentDto {
    /**
     * 
     * @type {number}
     * @memberof AppointmentDto
     */
    id?: number;
    /**
     * 
     * @type {UserDto}
     * @memberof AppointmentDto
     */
    user?: UserDto;
    /**
     * 
     * @type {PhysicianDto}
     * @memberof AppointmentDto
     */
    physician?: PhysicianDto;
    /**
     * 
     * @type {Date}
     * @memberof AppointmentDto
     */
    time?: Date;
    /**
     * 
     * @type {string}
     * @memberof AppointmentDto
     */
    description?: string | null;
    /**
     * 
     * @type {MedicalRecordDto}
     * @memberof AppointmentDto
     */
    medicalRecord?: MedicalRecordDto;
}

export function AppointmentDtoFromJSON(json: any): AppointmentDto {
    return AppointmentDtoFromJSONTyped(json, false);
}

export function AppointmentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppointmentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'user': !exists(json, 'user') ? undefined : UserDtoFromJSON(json['user']),
        'physician': !exists(json, 'physician') ? undefined : PhysicianDtoFromJSON(json['physician']),
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'medicalRecord': !exists(json, 'medicalRecord') ? undefined : MedicalRecordDtoFromJSON(json['medicalRecord']),
    };
}

export function AppointmentDtoToJSON(value?: AppointmentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': UserDtoToJSON(value.user),
        'physician': PhysicianDtoToJSON(value.physician),
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'description': value.description,
        'medicalRecord': MedicalRecordDtoToJSON(value.medicalRecord),
    };
}



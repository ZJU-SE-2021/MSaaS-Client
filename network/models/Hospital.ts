/* tslint:disable */
/* eslint-disable */
/**
 * MsaasBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Department,
    DepartmentFromJSON,
    DepartmentFromJSONTyped,
    DepartmentToJSON,
} from './';

/**
 * 
 * @export
 * @interface Hospital
 */
export interface Hospital {
    /**
     * 
     * @type {number}
     * @memberof Hospital
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Hospital
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Hospital
     */
    address?: string | null;
    /**
     * 
     * @type {Array<Department>}
     * @memberof Hospital
     */
    departments?: Array<Department> | null;
}

export function HospitalFromJSON(json: any): Hospital {
    return HospitalFromJSONTyped(json, false);
}

export function HospitalFromJSONTyped(json: any, ignoreDiscriminator: boolean): Hospital {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'departments': !exists(json, 'departments') ? undefined : (json['departments'] === null ? null : (json['departments'] as Array<any>).map(DepartmentFromJSON)),
    };
}

export function HospitalToJSON(value?: Hospital | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'address': value.address,
        'departments': value.departments === undefined ? undefined : (value.departments === null ? null : (value.departments as Array<any>).map(DepartmentToJSON)),
    };
}



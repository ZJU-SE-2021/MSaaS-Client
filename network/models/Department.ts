/* tslint:disable */
/* eslint-disable */
/**
 * MsaasBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Hospital,
    HospitalFromJSON,
    HospitalFromJSONTyped,
    HospitalToJSON,
    Physician,
    PhysicianFromJSON,
    PhysicianFromJSONTyped,
    PhysicianToJSON,
} from './';

/**
 * 
 * @export
 * @interface Department
 */
export interface Department {
    /**
     * 
     * @type {number}
     * @memberof Department
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Department
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Department
     */
    hospitalId?: number;
    /**
     * 
     * @type {Hospital}
     * @memberof Department
     */
    hospital?: Hospital;
    /**
     * 
     * @type {string}
     * @memberof Department
     */
    section?: string | null;
    /**
     * 
     * @type {Array<Physician>}
     * @memberof Department
     */
    physicians?: Array<Physician> | null;
}

export function DepartmentFromJSON(json: any): Department {
    return DepartmentFromJSONTyped(json, false);
}

export function DepartmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Department {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'hospitalId': !exists(json, 'hospitalId') ? undefined : json['hospitalId'],
        'hospital': !exists(json, 'hospital') ? undefined : HospitalFromJSON(json['hospital']),
        'section': !exists(json, 'section') ? undefined : json['section'],
        'physicians': !exists(json, 'physicians') ? undefined : (json['physicians'] === null ? null : (json['physicians'] as Array<any>).map(PhysicianFromJSON)),
    };
}

export function DepartmentToJSON(value?: Department | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'hospitalId': value.hospitalId,
        'hospital': HospitalToJSON(value.hospital),
        'section': value.section,
        'physicians': value.physicians === undefined ? undefined : (value.physicians === null ? null : (value.physicians as Array<any>).map(PhysicianToJSON)),
    };
}



/* tslint:disable */
/* eslint-disable */
/**
 * MsaasBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AppointmentForm,
    AppointmentFormFromJSON,
    AppointmentFormToJSON,
    MedicalRecordForm,
    MedicalRecordFormFromJSON,
    MedicalRecordFormToJSON,
} from '../models';

export interface AppointmentsIdMedicalRecordPostRequest {
    id: number;
    medicalRecordForm?: MedicalRecordForm;
}

export interface AppointmentsPostRequest {
    appointmentForm?: AppointmentForm;
}

/**
 * 
 */
export class AppointmentsApi extends runtime.BaseAPI {

    /**
     */
    async appointmentsIdMedicalRecordPostRaw(requestParameters: AppointmentsIdMedicalRecordPostRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling appointmentsIdMedicalRecordPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Appointments/{id}/MedicalRecord`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MedicalRecordFormToJSON(requestParameters.medicalRecordForm),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async appointmentsIdMedicalRecordPost(requestParameters: AppointmentsIdMedicalRecordPostRequest): Promise<void> {
        await this.appointmentsIdMedicalRecordPostRaw(requestParameters);
    }

    /**
     */
    async appointmentsPostRaw(requestParameters: AppointmentsPostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Appointments`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AppointmentFormToJSON(requestParameters.appointmentForm),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async appointmentsPost(requestParameters: AppointmentsPostRequest): Promise<void> {
        await this.appointmentsPostRaw(requestParameters);
    }

}

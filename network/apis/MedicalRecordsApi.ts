/* tslint:disable */
/* eslint-disable */
/**
 * MsaasBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MedicalRecordDto,
    MedicalRecordDtoFromJSON,
    MedicalRecordDtoToJSON,
    MedicalRecordForm,
    MedicalRecordFormFromJSON,
    MedicalRecordFormToJSON,
} from '../models';

export interface AddMedicalRecordRequest {
    medicalRecordForm?: MedicalRecordForm;
}

export interface GetMedicalRecordByIdRequest {
    id: number;
}

export interface UpdateMedicalRecordRequest {
    id: number;
    medicalRecordForm?: MedicalRecordForm;
}

/**
 * 
 */
export class MedicalRecordsApi extends runtime.BaseAPI {

    /**
     */
    async addMedicalRecordRaw(requestParameters: AddMedicalRecordRequest): Promise<runtime.ApiResponse<MedicalRecordDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/MedicalRecords`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MedicalRecordFormToJSON(requestParameters.medicalRecordForm),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MedicalRecordDtoFromJSON(jsonValue));
    }

    /**
     */
    async addMedicalRecord(requestParameters: AddMedicalRecordRequest): Promise<MedicalRecordDto> {
        const response = await this.addMedicalRecordRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async getMedicalRecordByIdRaw(requestParameters: GetMedicalRecordByIdRequest): Promise<runtime.ApiResponse<MedicalRecordDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getMedicalRecordById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/MedicalRecords/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MedicalRecordDtoFromJSON(jsonValue));
    }

    /**
     */
    async getMedicalRecordById(requestParameters: GetMedicalRecordByIdRequest): Promise<MedicalRecordDto> {
        const response = await this.getMedicalRecordByIdRaw(requestParameters);
        return await response.value();
    }

    /**
     */
    async updateMedicalRecordRaw(requestParameters: UpdateMedicalRecordRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateMedicalRecord.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/MedicalRecords/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: MedicalRecordFormToJSON(requestParameters.medicalRecordForm),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async updateMedicalRecord(requestParameters: UpdateMedicalRecordRequest): Promise<void> {
        await this.updateMedicalRecordRaw(requestParameters);
    }

}
